<%
--[[
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
	http://www.apache.org/licenses/LICENSE-2.0
$Id$

* Copyright (c) 2013, VIA Technologies, Inc.
* Project Name:  ViaView web implementation
* File Name   :  ApUpdataAjax.htm
* Author      :  Tymon Huang / Rock Yang
* Data        :  2013/08/01
* Description :  this file is use to save user add data to app.
* Revision History
 NO        Data            Revised by       Item       Description
1.0.0.1  2013/07/29  Tymon Huang/Rock Yang       ...       First release

--]]
%>

<%
    local h    = require "luci.http"
    local io   = require "nixio"
    local socket = require "socket"

    local fd   = nil
    local flag = true
	local path = nil
	
	--udp socket communication
	apNumIndex = 1
	local host   = "localhost"
	local port   = "8888"
	local preamble = "viamanag"
	local cmdRecArray = {}
	local apNameArray = {}
	local modelArray = {}
	local ipAddrArray = {}
	local macAddrArray = {}
	local channelArray = {}
	local statusArray = {}
	local profileArray = {}
	local groupArray = {}

	
    -- except the statement sentence, no code block is available before the setfilehandler
    h.setfilehandler(
        function(field, chunk, eof)
            if not field then
				return
			end
			
			if field.name == "profile" then
				path = "/tmp/profile.txt"
			else
				path = "/tmp/firmware.img"
			end          
            
            if flag then
                --h.write("uploading...")
                flag = false
            end         
            
            if not fd then
                fd = io.open(path, "w")
            end
            
            fd:write(chunk)
            
            if eof and fd then
                fd:close()
                fd = nil
                --h.write("<br />upload done.")
                luci.template.render("admin_ViaView/Upgrade", {
					status = true,
					filename = path
				})
            end

            --luci.http.redirect(
            --    luci.dispatcher.build_url("admin", "status", "iptables")
            --)
            --luci.http.redirect(luci.dispatcher.build_url("admin/ViaView/APList") .. "?display=list")
            --h.redirect(h.dispatcher.build_url("admin", "ViaView", "APUpdate"))
	end
    )

    -- this section must be put under setfilehandler
    if h.formvalue("act") == "update" then
        return
    end
    


	--Step 1. Get Profiel list from AC (use udp to communicate to AC app)
	local ProfileNum = 1
	local profileListCmdArray = {}
	local cmdProfileNameArray = {}
	local udp    = socket.udp()
	udp:settimeout(10)
	udp:setpeername(host,port)
	--udp:sendto("test Message", host, port)
	--udp:send("test message")
	udp:send(preamble.."ProfileListRequestStart")
	while ProfileNum <= 100 do
		local StrCmdReceive  = udp:receive()
		if (StrCmdReceive) then
			profileListCmdArray[ProfileNum] = StrCmdReceive;
			if (string.find(profileListCmdArray[ProfileNum], preamble.."ProfileListRequestEnd")) then
				break;
			end
			if (string.find(profileListCmdArray[ProfileNum], preamble.."ProfileListRequestStart")) then
				ProfileNum = ProfileNum+1
			end
		else
			break;
		end
	end
	udp:close()

	--Step 1.1. parse profile list message to array varibale 
	local profileNumIndex = 1
	while profileNumIndex < ProfileNum do
			local element = "ProfileName="
			if string.find(profileListCmdArray[profileNumIndex], element) then
				local strTmp = string.sub(profileListCmdArray[profileNumIndex],string.find(profileListCmdArray[profileNumIndex], element),-1)
				strTmp = string.sub(strTmp,string.len(element)+1,-1)
				if string.find(strTmp, " ") then
					cmdProfileNameArray[profileNumIndex] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
				else
					cmdProfileNameArray[profileNumIndex] = strTmp
				end
			else
				--cmdProfileNameArray[profileNumIndex][elemIndex] = "0"
			end
		profileNumIndex = profileNumIndex+1
	end


	-- Step 2. Get Ap list(use udp to communicate to AC app)
	local udp    = socket.udp()
	udp:settimeout(10)
	udp:setpeername(host,port)
	udp:send(preamble.."APListRequestStart")
	while apNumIndex <= 255 do
		local StrCmdReceive  = udp:receive()
		if (StrCmdReceive) then
			cmdRecArray[apNumIndex] = StrCmdReceive;
			if (string.find(cmdRecArray[apNumIndex], preamble.."APListRequestEnd")) then
				break;
			end
			if (string.find(cmdRecArray[apNumIndex], preamble.."APListRequestStart")) then
				apNumIndex = apNumIndex+1
			end
		else
			break;
		end
	end
	udp:close()

	--Step 2.1 parse ap list message to array varibale
	local i = 1
	local element
	while i < apNumIndex do
		element = "APName="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				apNameArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				apNameArray[i] = strTmp
			end
		end
		element = "Model="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				modelArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				modelArray[i] = strTmp
			end
		end
		element = "IPAddress="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				ipAddrArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				ipAddrArray[i] = strTmp
			end
		end
		element = "MACAddress="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				macAddrArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				macAddrArray[i] = strTmp
			end
		end
		element = "Channel="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				channelArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				channelArray[i] = strTmp
			end
		end
		element = "Status="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				statusArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				statusArray[i] = strTmp
			end
		end
		element = "Profile="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				profileArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				profileArray[i] = strTmp
			end
		end
		element = "Group="
		if string.find(cmdRecArray[i], element) then
			local strTmp = string.sub(cmdRecArray[i],string.find(cmdRecArray[i], element),-1)
			strTmp = string.sub(strTmp,string.len(element)+1,-1)
			if string.find(strTmp, " ") then
				groupArray[i] = string.sub(strTmp,1,string.find(strTmp, " ")-1)
			else
				groupArray[i] = strTmp
			end
		end

		i = i+1
	end

	strUploadFWStatus = luci.http.formvalue("Status")	

%>

<%+header%>
<script type="text/javascript" src="<%=resource%>/script/common.js"></script>


<fieldset class="cbi-section">
	<legend><%:Update Firmware / Apply Profile%></legend>

<!--
	<ul class="cbi-tabmenu">
		<li class="cbi-tab"><a href="#" onclick="document.getElementById('tabProfile').style.display='block';document.getElementById('tabFirmware').style.display='none';">Update Profile</a></li>
		<li class="cbi-tab"><a href="#" onclick="document.getElementById('tabProfile').style.display='none';document.getElementById('tabFirmware').style.display='block';">Update Firmware</a></li>
	</ul>
	<fieldset class="cbi-section-node cbi-section-node-tabbed">
		<div class="cbi-tabcontainer">
		<div id="tabProfile" style="border:1px solid #ccc">
		</div></div>

		<div class="cbi-tabcontainer">
		<div id="tabFirmware" style="display:none">
		</div></div>
	</fieldset>
-->
		<!--<form id="update" name="update" action="<%=REQUEST_URI%>" method="post" enctype="multipart/form-data">-->
	<form id="update" name="update" action="<%=controller%>/admin/ViaView/APUpdate" method="post" enctype="multipart/form-data">
		<fieldset class="cbi-section">
			<input type="hidden" name="act" value="update" />
			<input id="UploadFWStatus" type="hidden" name="UploadFWStatus" value="<%=pcdata(strUploadFWStatus)%>" />
			<br />
			Update Profile
			<input type="radio" name="updateOps" value="profile" checked="checked" onclick="modifyName('targetFile', 'profile')" />&nbsp;
			<select id="ProfileNameList" class="cbi-input-select" name="ProfileNameList" >
				<% 
					local i = 1
					while i < ProfileNum do
				%>
				<option value="<%=pcdata(cmdProfileNameArray[i])%>"><%=pcdata(cmdProfileNameArray[i])%></option>
				<% 	i=i+1 end %>
			</select>
			<br />
			<br />
			<hr />
			<br />

			Flash Firmware
			<% if (strUploadFWStatus == "true") then %>
			<input type="radio" name="updateOps" value="firmware" checked="checked" onclick="modifyName('targetFile', 'firmware')" />&nbsp;
			<% else %>
			<input type="radio" name="updateOps" value="firmware" onclick="modifyName('targetFile', 'firmware')" />&nbsp;
			<% end %>
			<input type="file" id="targetFile" name="profile"/>
			<input type="submit" id="updateBtn" class="cbi-button cbi-button-apply" value="upload firmware" />
			<br />
		</fieldset>
	</form>
	

	
	<fieldset class="cbi-section">
		<legend><%:AP List to be Upgraded%></legend>
		<table class="cbi-section-table">
			<tr class="cbi-section-table-titles">
				<th class="cbi-section-table-cell">
					<input type="checkbox" name="cbxAll" value="All" onclick="checkAll(this,'itemAP')" />
				</th>
				<th class="cbi-section-table-cell"><%:AP Name%></th>
				<th class="cbi-section-table-cell"><%:Model%></th>
				<th class="cbi-section-table-cell"><%:IP Address%></th>
				<th class="cbi-section-table-cell"><%:MAC Address%></th>
				<th class="cbi-section-table-cell"><%:Status%></th>
				<th class="cbi-section-table-cell"><%:Profile%></th>
				<th class="cbi-section-table-cell"><%:Update Status%></th>
			</tr>
			<% 
				local i = 1
				while i < apNumIndex do
			%>
			<tr class="cbi-section-table-row cbi-rowstyle-<%= i%2 %>">
				<td class="cbi-value-field">
					<input type="checkbox" name="itemAP" value="<%:NAME1%>" />
				</td>
				<td class="cbi-value-field" name="tdApName"><%=pcdata(apNameArray[i])%></td>
				<td class="cbi-value-field"><%=pcdata(modelArray[i])%></td>
				<td class="cbi-value-field" name="tdIpAddr"><%=pcdata(ipAddrArray[i])%></td>
				<td class="cbi-value-field" name="tdMacAddr"><%=pcdata(macAddrArray[i])%></td>
				<td class="cbi-value-field"><%=pcdata(statusArray[i])%></td>
				<td class="cbi-value-field"><%=pcdata(profileArray[i])%></td>
				<td class="cbi-value-field" name="tdStatus" style="color:red"></td>
			</tr>
			<% 	
				i = i + 1 end 
			%>
		</table>
	</fieldset>


	<div class="cbi-page-actions" style="text-align:right">
		<img src="/luci-static/resources/icons/loading.gif" style="float:left;height:20px;display:none;vertical-align:middle" alt="Loading" id="ImgLoading"/>
		<input class="cbi-button cbi-button-apply" type="button" name="cbi.apply" onclick="funApUpdate()" value="Update" />					
	</div>
	<div class="clear"></div>


</fieldset>

<script>
//<![CDATA[
var imgLoading=document.getElementById("ImgLoading");
var updateApNum = 0;


function createXMLHttpRequest(){
	var xmlHttp;

	if (window.XMLHttpRequest) {  // Non-IE browsers
		xmlHttp = new XMLHttpRequest();
	}
	else if (window.ActiveXObject) {  //IE
			xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
	}
	else {  //browsers doesn's support AJAX
		alert("ApConfigSave.htm: XMLHttpRequest is not supported by this browser!");
	}
	return xmlHttp;
}

function funAjaxStart(bProfileOrFirmware, ProfileName, APIndex, MACAddress){
	var xmlHttp;
	//console.log(ListApName);
	//console.log(IPAddress);
	xmlHttp = createXMLHttpRequest();

	var url = "<%=controller%>/admin/ViaView/APUpdateAjax?bProfileOrFirmware="+bProfileOrFirmware+"&ProfileName="+ProfileName+"&APIndex="+APIndex+"&MACAddress="+MACAddress;
	xmlHttp.open("GET",url,true);
	xmlHttp.onreadystatechange=function(){callback(xmlHttp);};  //set server information function
	xmlHttp.send(null);
}

function callback(xmlHttp){
	//console.log("test");
	if (xmlHttp.readyState == 4){
		if (xmlHttp.status == 200)
		{
			updateApNum--;
			var strResponse = xmlHttp.responseText;  // get the web server response message
			var Index;
			var status;

			//document.getElementById("StatusMessage").innerHTML = strResponse;
			Index = strResponse.substring(strResponse.indexOf("APIndex=")+8,strResponse.indexOf(' '));
			status=strResponse.substring(strResponse.indexOf("Status=")+7);
			//console.log(strResponse+"Index:"+Index+"status:"+status);
			//alert(strResponse+"Index:"+Index+"status:"+status);

			document.getElementsByName("tdStatus")[Number(Index)].innerHTML=status;
			//setTimeout(function(){location.href="<%=controller%>/admin/ViaView/APList";},5000);

			if (updateApNum == 0)
			{
				imgLoading.style.display="none";
			}
		}
	}
}

function funApUpdate()
{
	var bProfileOrFirmware = true;
	var ProfileName;
	imgLoading.style.display="block";

	if (document.getElementsByName("updateOps")[0].checked == true)
	{
		bProfileOrFirmware = true;
		ProfileName = document.getElementsByName("ProfileNameList")[0].value;
	}
	else
	{
		bProfileOrFirmware = false;
	}

	for (var APIndex = 0; APIndex < <%=pcdata(apNumIndex-1)%>; APIndex++)
	{
		if (document.getElementsByName("itemAP")[APIndex].checked == true)
		{
			var MACAddress = document.getElementsByName("tdMacAddr")[APIndex].innerHTML;
			updateApNum++;
			funAjaxStart(bProfileOrFirmware, ProfileName, APIndex , MACAddress);
		}	
	}

	if (updateApNum == 0)
	{
		imgLoading.style.display="none";
		alert("Please select AP to update");
	}	
}
//]]>
</script>

<%+footer%>
